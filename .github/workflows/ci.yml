name: Build and deploy ASP.Net Core app to an Azure Web App

env:
  AZURE_WEBAPP_NAME: nblackout-money-manager
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '6.0.x'

concurrency:
  group: money-manager
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Set up dependency caching
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore tools
        run: dotnet tool restore

      - name: Restore packages
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore --nologo

      - name: Test
        run: dotnet test --no-restore --verbosity minimal

      - name: Mutation testing Write
        run: dotnet stryker -p MoneyManager.Application.Write -f ../stryker-config.json
        working-directory: ./MoneyManager.Application.Write.Tests

      - name: Mutation testing Read
        run: dotnet stryker -p MoneyManager.Application.Read -f ../stryker-config.json
        working-directory: ./MoneyManager.Application.Read.Tests

      - name: Publish API
        run: dotnet publish MoneyManager.Api/MoneyManager.Api.csproj -c Release -o ${{env.DOTNET_ROOT}}/artifacts/api --nologo

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: .artifact-api
          path: ${{env.DOTNET_ROOT}}/artifacts/api

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: .artifact-api

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}